<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_speed = 6;
m_airSpd = 3;
m_jumpForce = 18;
xSign = 0;
m_gForce = 0.75;
m_hangingUpSpd = 4;
m_canMoveInAir = false;
m_fric = 0.97;
m_waterDivider = 2;
m_maxHp = 99;

hp = m_maxHp;

state = st_idle; // Variavel que ira gerenciar o estado atual do personagem

inWater = false;
hangingUp = false;

ySpeed = 0;
xSpeed = 0;
grav = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Iniciação dos Scripts

dir = keyboard_check(key().right) - keyboard_check(key().left); // Direção na qual o jogador está tentando andar, onde 1 é direita, -1 é esquerda e 0 é nulo;
wantMove = abs(dir); // Variável booleana, que diz se o jogador quer mover o personagem ou não, pois precionando uma das teclas de movimento, os valores possíveis são 1 e -1, sendo que o absoluto destes valores, é 1, ou seja, 1 é "quer mover" e 0 é "não quer mover";

script_execute(state); // Executa o script correspondente ao estado atual do personagem;

cleanMove(); // Executa o script de movimento limpo - By: Willy (GMBR);

if (keyboard_check_pressed(key().damage))
    takeDamage(5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cheats
if (keyboard_check_pressed(key().cheat))
{
    cheat = get_string("Enter a command: (mair | xspd | jump | hangspd | fric | waterDivisor | grav", "");

    switch(cheat)
    {
        case "mair":
            if (m_canMoveInAir) then m_canMoveInAir = false else m_canMoveInAir = true;
        break;
        case "xspd":
            m_speed = get_integer("Enter the new speed:", m_speed);
        break;
        case "jump":
            m_jumpForce = get_integer("Enter the new force:", m_jumpForce);
        break;
        case "hangspd":
            m_hangingUpSpd = get_integer("Enter the new hanging up speed:", m_hangingUpSpd);
        break;
        case "fric":
            m_fric = get_integer("Enter the new friction value:", m_fric);
        break;
        case "waterDivisor":
            m_waterDivider = get_integer("Enter the new water divisor value:", m_waterDivider);
        break;
        case "grav":
            m_gForce = get_integer("Enter the new gravity:", m_gForce);
        break;
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
