<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicializa variáveis e inicia alarme
STRIPES = 100;
TIME = 60;

height = noone;
width = noone;
timer = noone;
maxTimer = window_get_width();
anim = false;
roomChange = false;
nextRoom = noone;
horizontalTransition = true;

// Arrays
stripeOne[STRIPES] = 0;
stripeTwo[STRIPES] = 0;
length[STRIPES] = 0;
stripeSpeed[STRIPES] = 0;

// Roda alarme
alarm[0] = 1;
xTo = -1;
yTo = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finaliza arrays e inicia transições
x = view_xport[0];
y = view_yport[0];
var stripeWidth = window_get_width();
var stripeHeight = window_get_height();

// Finaliza arrays
if (horizontalTransition){
  height = window_get_height() / STRIPES;
  width = window_get_width() + (window_get_width() / 5);
  timer = -width;
  maxTimer = stripeWidth;
  
  for (var i = 0; i &lt; STRIPES; i++){
    stripeOne[i] = x - width;
    stripeTwo[i] = (x + stripeWidth) + width;
    length[i] = i * (stripeHeight / STRIPES);
    stripeSpeed[i] = random_range(width / TIME, width / TIME + (TIME / 8));
  }
}else{
  height = window_get_width() / STRIPES;
  width = window_get_height() + (window_get_height() / 5);
  timer = -width;
  maxTimer = stripeHeight;
  
  for (var i = 0; i &lt; STRIPES; i++){
    stripeOne[i] = x - width;
    stripeTwo[i] = (x + stripeHeight) + width;
    length[i] = i * (stripeWidth / STRIPES);
    stripeSpeed[i] = random_range(width / TIME, width / TIME + (TIME / 8));
  }
}

// Inicia transição
anim = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Verifica se a transição terminou
if (anim){
  for (var i = 0; i &lt; STRIPES; i++){
    stripeOne[i] += stripeSpeed[i];
    stripeTwo[i] -= stripeSpeed[i];
  }
  
  timer += width / TIME;
  
  if (timer + width &gt; maxTimer / 2 &amp;&amp; !roomChange){
    roomChange = true;
    room_goto(nextRoom);
    
    if (xTo != -1){
      oPlayer.x = xTo;
      oCamera.x = xTo;
    }
    if (yTo != -1){
      oPlayer.y = yTo;
      oCamera.y = yTo;
    }
  }
  
  if (timer &gt; maxTimer) then instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Desenha Transições
if (horizontalTransition) {
  // Faixas horizontais
  draw_set_color(c_black);
  
  // Desenha as linhas de acordo com as arrays
  for (var i = 0; i &lt; STRIPES; i++) {
    draw_rectangle(stripeOne[i], length[i], stripeOne[i] + width, length[i] - height, false);
    draw_rectangle(stripeTwo[i], length[i], stripeTwo[i] - width, length[i] - height, false);
  }
}else{
  // Vertical Stripes
  draw_set_color(c_black);

  // Desenha as linhas de acordo com as arrays
  for (var i = 0; i &lt; STRIPES; i++) {
    draw_rectangle(length[i], stripeOne[i], length[i] - height, stripeOne[i] + width, false);
    draw_rectangle(length[i], stripeTwo[i], length[i] - height, stripeTwo[i] - width, false);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
