<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SPEED = 6;
AIRSPEED = 3;
JUMPFORCE = 14;
GRAVITYFORCE = 0.5;
HANGINGUPSPEED = 4;
FREEMOVEINAIR = false;
FRICTIONFORCE = 0.97;
WATERDIVIDER = 2;
MAXHP = 99;
MAXFALLSPEED = 10;
SHOOTCOOLDOWN = 10;
XMAP = 28;
YMAP = 20;

hp = MAXHP;
shootCooldown = 0;
mapPositionTick = 0;
ySpeed = 0;
xSpeed = 0;
xSpeedSign = 0;
grav = 0;
facing = 1;

inWater = false;
hangingUp = false;


state = st_idle; // Variavel que ira gerenciar o estado atual do personagem

//instance_create(x, y, oCamera);
cameraInstance = initializeCamera();

initKeys();
map = loadMap();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Iniciação dos Scripts

dir = keyboard_check(key.right) - keyboard_check(key.left);
wantMove = abs(dir);

if (wantMove == 1)
  facing = dir;

bbTop  = bbox_top;
bbSide = 0;

if (dir == 1)
  bbSide = bbox_right;
else if (dir == -1)
  bbSide = bbox_left;

script_execute(state);

if (keyboard_check_pressed(key.shoot) &amp;&amp; shootCooldown == 0){
  instantiateShoot(facing);
  shootCooldown = SHOOTCOOLDOWN;
}

if (shootCooldown &gt; 0)
  shootCooldown--;

cleanMove(); // Executa o script de movimento limpo - By: Willy (GMBR);

if (keyboard_check_pressed(key.damage))
    takeDamage(5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cheats
if (keyboard_check_pressed(key.cheat)){
  cheat = get_string("Enter a command: (xspd | jump | hangspd | fric | waterDivisor | grav | fall | (x/y)CamDist | camSpeed", "");

  switch(cheat){
    case "xspd":
      SPEED = get_integer("Enter the new speed:", SPEED);
    break;
    case "jump":
      JUMPFORCE = get_integer("Enter the new force:", JUMPFORCE);
    break;
    case "hangspd":
      HANGINGUPSPEED = get_integer("Enter the new hanging up speed:", HANGINGUPSPEED);
    break;
    case "fric":
      FRICTIONFORCE = get_integer("Enter the new friction value:", FRICTIONFORCE);
    break;
    case "waterDivisor":
      WATERDIVIDER = get_integer("Enter the new water divisor value:", WATERDIVIDER);
    break;
    case "grav":
      GRAVITYFORCE = get_integer("Enter the new gravity:", GRAVITYFORCE);
    break;
    case "fall":
      MAXFALLSPEED = get_integer("Enter the new max fall speed:", MAXFALLSPEED);
    break;
    case "xCamDist":
      cameraInstance.xDistance = get_integer("Enter the new camera x distance:", cameraInstance.xDistance);
    break;
    case "yCamDist":
      cameraInstance.yDistance = get_integer("Enter the new camera y distance:", cameraInstance.yDistance);
    break;
    case "camSpeed":
      cameraInstance.SPEED = get_integer("Enter the new camera speed:", SPEED);
  }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawHud();

draw_set_colour(c_black);
draw_set_halign(fa_right);

var top  = bbox_top;
var side = 0;

if (dir == 1)
  side = bbox_right;
else if (dir == -1)
  side = bbox_left;
else
  side = x;
  
var inHiddenArea = false;

if (!inHiddenArea)
  inHiddenArea = place_meeting(x, y, oHiddenPlace);
else
  inHiddenArea = place_meeting(cameraInstance.x, cameraInstance.y, oHiddenPlace);

draw_text(view_wview[0]-10, 10,
          script_get_name(state)+
          "#side: "+string(side)+
          "#top: "+string(top)+
          "#dir: "+string(dir)+
          "#xSpeedSign: "+string(xSpeedSign)+
          "#ySpeedSign: "+string(ySpeedSign)+
          "#inHiddenArea: "+string(cameraInstance.inHiddenArea)+
          "#facing: "+string(facing)+
          "#shootCooldown: "+string(shootCooldown)+
          "#delta_time: "+string(delta_time)/*+
          "#xCameraSpeedSign: "+string(cameraInstance.xSpeedSign)+
          "#yCameraSpeedSign: "+string(cameraInstance.ySpeedSign)*/);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set fullscreen

if (window_get_fullscreen())
  window_set_fullscreen(false);
else
  window_set_fullscreen(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
